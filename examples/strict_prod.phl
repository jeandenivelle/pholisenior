
def strict( P : Form( Obj )) := [ x1 : Obj ] # P( x1 ) : Form;

def strict( P : Form( Obj, Obj )) := [ x1, x2 : Obj ] # P(x1,x2) : Form;
def strict( P : Form( Obj, Obj, Obj )) := [ x1, x2, x3 : Obj ] # P(x1,x2,x3) : Form;

def stricton( P, Q : Form( Obj )) := 
   [ x1 : Obj ] P(x1) -> # Q(x1) : Form;
def stricton( P, Q : Form( Obj, Obj )) := 
   [ x1, x2 : Obj ] P(x1,x2) -> # Q(x1,x2) : Form;

def stricton( P, Q : Form( Obj, Obj, Obj )) :=
   [ x1, x2, x3 : Obj ] P(x1,x2,x3) -> # Q(x1,x2,x3) : Form;

def prod( P1,P2 : Form( Obj )) ( x1, x2 : Obj ) := P1(x1) & P2(x2) : Form;
def prod( P1,P2,P3 : Form( Obj )) ( x1, x2, x3 : Obj ) :=
   P1(x1) & P2(x2) & P3(x3) : Form;

eof

